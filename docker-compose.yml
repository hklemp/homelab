version: "3.9"
services:
  haproxy:
    image: haproxy:2.7
    volumes:
      - ./conf/haproxy:/haproxy-override
      - ./conf/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "${PORT}:80"
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ./conf/homarr/configs:/app/data/configs
      - ./data/homarr/icons:/app/public/icons
      - ./data/homarr/data:/data

  homeassistant:
    image: lscr.io/linuxserver/homeassistant:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./data/homeassistant:/config
    ports:
      - 8123:8123 #optional
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    restart: unless-stopped
  paperless-ngx:
    image: lscr.io/linuxserver/paperless-ngx:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - REDIS_URL= #optional
    volumes:
      - ./conf/paperless-ngx:/config
      - ./data/paperless-ngx:/data
    restart: unless-stopped
  pihole:
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      #- "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
    environment:
      TZ: 'Etc/UTC'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped